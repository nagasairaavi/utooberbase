{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/youtuberslist/youtuberslist.component.ts","./src/app/youtuberslist/youtuberslist.component.html","./src/app/common.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\nimport { CommonService } from '../common.service';\nimport * as FileSaver from 'file-saver';\n\nimport * as XLSX from 'xlsx';\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public cs:CommonService) { }\n  youtubersList:any;\n  file:File;\n  sno=[];\n  Alength;\n  index=[];\n  \n  ngOnInit(): void {\n  \n  }\n\n  newYoutuber(obj){\n    // console.log(obj);\n    // this.youtubersList.push(obj);\n    this.cs.newData(obj).subscribe((res)=>{\n      if(res['message']!==\"success\"){\n        alert(res['message'])\n      }\n      else{\n        alert(\"youtuber data uploaded\");\n        this.ngOnInit();\n      }\n    })\n  \n  }\n\n  fileUpload(filedata){\n    this.file=filedata.target.files[0];\n\n  }\n  sheetData(data){\n    let formdata = new FormData();\n    formdata.append(\"excel\",this.file,this.file.name);\n    this.cs.uploadSheet(formdata).subscribe((res)=>{\n    if(res[\"message\"]==\"Sheet uploaded successfully\")\n    {\n    alert(res[\"message\"]);\n    this.ngOnInit()\n    }\n    else if(res[\"err_desc\"]==\"Corrupted excel file\")\n    {\n    alert(res[\"err_desc\"]);\n    }\n   })\n  }\n}","<div class=\"row\">\n    <div class=\"col-4\"></div>\n    <div class=\"col-4\">\n        <h2>Register Youtuber</h2>\n        <form name=\"form\" #ref=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"newYoutuber(ref.value);ref.reset()\">\n            <div class=\"form-group\">\n              <label for=\"channelname\">Channel Name</label>\n              <input type=\"text\" class=\"form-control\" autocomplete=\"off\" name=\"channelname\" minlength=\"2\" required #ref1=\"ngModel\" ngModel placeholder=\"Channel name\" id=\"channelname\">\n              <div *ngIf=\"ref1.invalid && (ref1.dirty || ref1.touched)\" class=\"alert text-danger\">\n                <div *ngIf=\"ref1.errors.required\">\n                  *Channel name is required.\n                </div>\n                <div *ngIf=\"ref1.errors.minlength\">\n                  *fullname must be atleast 2 characters\n                </div>\n              </div>\n              <p id=\"demo1\"></p>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"email\">Email id</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" #ref3=\"ngModel\" required  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" ngModel placeholder=\"Email\" id=\"email\">\n                <div *ngIf=\"ref3.invalid && (ref3.dirty || ref3.touched)\" class=\"alert text-danger\">\n                  <div *ngIf=\"ref3.errors.required\">\n                    *Email id required\n                  </div>\n                  <div *ngIf=\"ref3.errors.pattern\">\n                    *Enter valid mail id\n                  </div>\n                </div>\n                <p id=\"demo3\"></p>\n              </div>\n             \n              <div class=\"form-group\">\n                <label for=\"mobile\">Mobile</label>\n                <input type=\"number\" class=\"form-control\"  name=\"mobile\"  autocomplete=\"off\" pattern=\"[0-9]{10}\"  #ref2=\"ngModel\" ngModel placeholder=\"Mobile (optional)\" id=\"mobile\">\n                <div *ngIf=\"ref2.invalid && (ref2.dirty || ref2.touched)\" class=\"alert text-danger\">\n                  <!-- <div *ngIf=\"ref2.errors.required\">\n                    *Mobile number is required\n                  </div> -->\n                  <div *ngIf=\"ref2.errors.pattern\">\n                    *Mobile number must contain 10 digits\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"views\">Avg views</label>\n                <input type=\"text\" class=\"form-control\"  name=\"views\"  autocomplete=\"off\"  #ref4=\"ngModel\" ngModel placeholder=\"views (optional)\" id=\"views\">\n                <div *ngIf=\"ref4.invalid && (ref4.dirty || ref4.touched)\" class=\"alert text-danger\">\n                  <!-- <div *ngIf=\"ref4.errors.required\">\n                    *Mobile number is required\n                  </div>\n                  <div *ngIf=\"ref4.errors.pattern\">\n                    *Mobile number must contain 10 digits\n                  </div>-->\n                </div> \n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"link\">Channel link</label>\n                <input type=\"url\" class=\"form-control\"  name=\"link\"  autocomplete=\"off\"  #ref5=\"ngModel\" required ngModel placeholder=\"channel link\" id=\"link\">\n                <div *ngIf=\"ref5.invalid && (ref5.dirty || ref5.touched)\" class=\"alert text-danger\">\n                  <!-- <div *ngIf=\"ref4.errors.required\">\n                    *Mobile number is required\n                  </div>\n                  <div *ngIf=\"ref4.errors.pattern\">\n                    *Mobile number must contain 10 digits\n                  </div>-->\n                  *Channel link is required\n                </div> \n              </div>\n\n              <div class=\"form-group\">\n                <button type=\"submit\" [disabled]=\"ref.invalid\" class=\"btn btn-primary\">Register</button>\n              </div>\n          </form>\n    </div>\n    <div class=\"col-4\">\n      <strong> For bulk data entry, you can also upload as excel sheets...</strong>\n        <div class=\"form-group\">\n            <label for=\"myFile\">upload excel</label>\n            <input type=\"file\" name=\"excel\" class=\"form-control\"\n            (change)=\"fileUpload($event)\" #ref6=\"ngModel\" ngModel>\n        </div>\n        <button class=\"btn btn-success\" (click)=\"sheetData(ref6.value);ref6.reset()\">Upload</button>\n    </div>\n</div>\n\n\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project2';\n \n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <!-- Brand/logo -->\n    <h6 class=\"navbar-brand\" href=\"#\">UtooberBASE</h6>\n    \n    <!-- Links -->\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"home\"><strong>Home</strong></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"youtuberslist\"><strong>YoutubersList</strong></a>\n      </li>\n    </ul>\n  </nav>\n<!-- Latest compiled and minified CSS -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n\n<!-- jQuery library -->\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n\n<!-- Popper JS -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n\n<!-- Latest compiled JavaScript -->\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport * as FileSaver from 'file-saver';\nimport { YoutuberslistComponent } from './youtuberslist/youtuberslist.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    YoutuberslistComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TooltipModule.forRoot()  \n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { from } from 'rxjs';\nimport { CommonService } from '../common.service';\nimport * as FileSaver from 'file-saver';\n\nimport * as XLSX from 'xlsx';\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n@Component({\n  selector: 'app-youtuberslist',\n  templateUrl: './youtuberslist.component.html',\n  styleUrls: ['./youtuberslist.component.css']\n})\nexport class YoutuberslistComponent implements OnInit {\n\n  constructor(public cs:CommonService) { }\n  youtubersList:any;\n  file:File;\n  sno=[];\n  Alength;\n  commonTerm;\n  index=[];\n  ngOnInit(): void {\n    console.log(\"a\");\n    this.cs.youtubersList().subscribe((dataYoutube)=>{\n      console.log(\"a1\");\n      \n      \n      \n      this.youtubersList=dataYoutube[\"message\"];\n      \n      this.Alength=this.youtubersList.length;\n      console.log(this.Alength);\n      for(let i=1;i===this.Alength;i++){\n        console.log(\"checking for loop\");\n        \n        this.index.push(i);\n      }\n      console.log(this.index);\n      \n      \n      \n    })\n  }\n\n\n  \n\n\n\n\n  \n  \n \n  \n  public downloadFile(): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.youtubersList);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames:\n    ['data'] };\n    const excelBuffer:any=XLSX.write(workbook,{   bookType:\"xlsx\", type:\n    \"file\"})\n    this.saveAsExcelFile(excelBuffer, 'excelFileName');\n    }\n    private saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() +\n    EXCEL_EXTENSION);\n    }\n \n}\n  \n\n\n\n","\n<div class=\"container\">\n    <h3>Youtuber List</h3>\n    <p><input type=\"text\" ng-model=\"test\"></p>\n  <div class=\"table\">\n    <table>\n      <thead>\n        <!-- <th>S.no</th> -->\n        <th>Channel name</th>\n        <th>Mail id</th>\n        <th>Mobile</th>\n        <th>Avg views for video</th>\n        <th>Channel link</th>\n      </thead>\n      <tr *ngFor=\"let k of youtubersList\">\n        <!-- <td *ngFor=\"let l of index\">{{l}}</td> -->\n        <td>{{k.channelname}}</td>\n        <td>{{k.email}}</td>\n        <td>{{k.mobile}}</td>\n        <td>{{k.views}}</td>\n        <td><a href=\"{{k.link}}\" target=\"_blank\">Visit channel</a></td>\n      </tr>\n    </table>\n   \n  </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private hc:HttpClient) { }\n\n\n  //to send data to db\n  newData(obj):Observable<any>{\n    console.log(obj);\n    return this.hc.post('upload',obj);\n  }\n\n\n  //to read data from db\n  youtubersList():Observable<any>{\n    console.log(\"b\");\n    return this.hc.get('/youtubers');\n    \n  }\n\n\n\n\n  //upload sheet\n  uploadSheet(data):Observable<any>{\n    return this.hc.post<any>('/uploadsheet',data)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { YoutuberslistComponent } from './youtuberslist/youtuberslist.component';\n\nconst routes: Routes = [{path:\"\",redirectTo:\"home\",pathMatch:\"full\"},{path:'home',component:HomeComponent},{path:'youtuberslist',component:YoutuberslistComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}